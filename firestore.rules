rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isAdmin() {
      return request.auth.uid == "1DM4FHPG7sQroBhD2wOIf19pO482";
    }

    // Posts collection
    match /posts/{postId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();  // Allow any authenticated user to update (for likes)
      allow delete: if isAuthenticated() && 
        resource.data.user.id == request.auth.uid;

      // Likes subcollection
      match /likes/{likeId} {
        allow read: if true;
        allow create, delete: if isAuthenticated() && likeId == request.auth.uid;
      }
    }

    // Global spots
    match /globalSpots/{spotId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (
        resource.data.createdBy == request.auth.uid ||
        isAdmin()
      );
      allow delete: if isAuthenticated() && (
        resource.data.createdBy == request.auth.uid ||
        isAdmin()
      );
    }

    // Pending spots
    match /pendingSpots/{spotId} {
      allow read: if isAdmin();
      allow create: if isAuthenticated();
      allow update, delete: if isAdmin();
    }

    // User spots
    match /users/{userId}/spots/{spotId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId);
    }

    // User profiles
    match /users/{userId} {
      allow read: if true;
      allow create: if isOwner(userId);
      allow update: if isAuthenticated() && (
        isOwner(userId) || 
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['favorites']) ||
        isAdmin()
      );
      allow delete: if isOwner(userId);
    }

    // Spot Submissions collection - Updated for better access control
    match /spotSubmissions/{submissionId} {
      // Allow users to read their own submissions and admin to read all
      allow read: if isAuthenticated() && (
        (resource != null && resource.data.userId == request.auth.uid) || isAdmin()
      );
      allow list: if isAuthenticated() && isAdmin();
      
      // Allow users to create submissions
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid &&
        request.resource.data.status == 'pending';
      
      // Allow admin to update/delete submissions
      allow update: if isAdmin() || (
        isAuthenticated() && resource.data.userId == request.auth.uid
      );
      allow delete: if isAdmin();
    }
  }
}