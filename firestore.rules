rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isAdmin() {
      return request.auth.uid == "1DM4FHPG7sQroBhD2wOIf19pO482" || 
             request.auth.token.email == "hello@sendpin.app";
    }

    // Posts collection
    match /posts/{postId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();  // Allow any authenticated user to update (for likes)
      allow delete: if isAuthenticated() && 
        resource.data.user.id == request.auth.uid;

      // Likes subcollection
      match /likes/{likeId} {
        allow read: if true;
        allow create, delete: if isAuthenticated() && likeId == request.auth.uid;
      }
    }

    // Global spots
    match /globalSpots/{spotId} {
      allow read: if true;
      allow create: if isAuthenticated() || isAdmin();
      allow update, delete: if isAdmin() || (
        isAuthenticated() && resource.data.createdBy == request.auth.uid
      );
    }

    // Pending spots
    match /pendingSpots/{spotId} {
      allow read: if isAdmin();
      allow create: if isAuthenticated();
      allow update, delete: if isAdmin();
    }

    // User spots
    match /users/{userId}/spots/{spotId} {
      allow read: if isAuthenticated();
      allow create: if isOwner(userId);
      allow update: if isAdmin() || isOwner(userId);
      allow delete: if isAdmin() || isOwner(userId);
    }

    // User profiles
    match /users/{userId} {
      allow read: if true;
      allow create: if isOwner(userId) && 
        request.resource.data.keys().hasAll(['email']) &&  // Only require email
        (!('isAdmin' in request.resource.data) || request.resource.data.isAdmin == false);  // Prevent setting admin on create
      allow update: if isAuthenticated() && (
        (isOwner(userId) && (
          // Allow updating profile fields
          request.resource.data.diff(resource.data).affectedKeys()
            .hasOnly(['displayName', 'photoURL', 'name', 'lastLogin', 'updatedAt']) ||
          // Or favorites
          request.resource.data.diff(resource.data).affectedKeys().hasOnly(['favorites'])
        )) ||
        isAdmin()
      ) && 
      (!('isAdmin' in request.resource.data) || 
        (isAdmin() && resource.data.isAdmin == request.resource.data.isAdmin) ||
        (!isAdmin() && request.resource.data.isAdmin == false)
      );  // Prevent modifying admin status unless admin
      allow delete: if isOwner(userId);
    }

    // Spot Submissions collection
    match /spotSubmissions/{submissionId} {
      allow read: if isAuthenticated() && (
        (resource != null && resource.data.userId == request.auth.uid) || isAdmin()
      );
      allow list: if isAdmin();
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid &&
        request.resource.data.status == 'pending';
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }
  }
}